// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondAssignment.Database.Context;

#nullable disable

namespace SecondAssignment.Database.Migrations
{
    [DbContext(typeof(SecondAssignmentContext))]
    [Migration("20240526161025_CreateDB")]
    partial class CreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecondAssignment.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("SecondAssignment.Database.Entities.Producer", b =>
                {
                    b.Property<Guid>("ProducersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProducersId");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("SecondAssignment.Database.Entities.Series", b =>
                {
                    b.Property<Guid>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrlPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrimaryGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProducerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecundaryGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VideoUrlPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeriesId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("ProducerId");

                    b.HasIndex("SecundaryGenreId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("SecondAssignment.Database.Entities.Series", b =>
                {
                    b.HasOne("SecondAssignment.Database.Entities.Genre", null)
                        .WithMany("Series")
                        .HasForeignKey("GenreId");

                    b.HasOne("SecondAssignment.Database.Entities.Genre", "PrimaryGenre")
                        .WithMany()
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SecondAssignment.Database.Entities.Producer", "Producer")
                        .WithMany("Series")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondAssignment.Database.Entities.Genre", "SecundaryGenre")
                        .WithMany()
                        .HasForeignKey("SecundaryGenreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PrimaryGenre");

                    b.Navigation("Producer");

                    b.Navigation("SecundaryGenre");
                });

            modelBuilder.Entity("SecondAssignment.Database.Entities.Genre", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("SecondAssignment.Database.Entities.Producer", b =>
                {
                    b.Navigation("Series");
                });
#pragma warning restore 612, 618
        }
    }
}
